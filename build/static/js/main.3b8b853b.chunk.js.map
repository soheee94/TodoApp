{"version":3,"sources":["lib/palette.js","api/todos.js","lib/asyncUtils.js","modules/todos.js","components/TodoItem.js","components/TodoPagination.js","components/TodoListTemplate.js","components/TodoHead.js","containers/TodoListContainer.js","components/TodoModal.js","components/TodoForm.js","containers/TodoModalContainer.js","components/TodoTemplate.js","containers/TodoFormContainer.js","components/TodoSearch.js","containers/TodoSearchContainer.js","components/TodoFileButton.js","containers/TodoFileContainer.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["palette","lightgray","gray","darkgray","blue","yellow","getTodos","a","axios","get","response","data","postTodo","text","ref","post","deleteTodo","id","delete","toggleTodo","put","putTodo","fileUpload","todos","fileDownload","createPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","payload","error","handleAsyncActions","keepData","state","action","loading","GET_TODOS","POST_TODO","DELETE_TODO","TOGGLE_TODO","PUT_TODO","FILE_UPLOAD","initialState","todo","keyword","modalOpen","todosAPI","TodoItemBlock","styled","div","Checkbox","props","done","css","Text","RefTodoItem","span","DateBlock","ActionBlock","TodoItem","refs","onDelete","onToggle","onModalOpen","createdDate","modifiedDate","onClick","map","key","PaginationBlock","TodoPagination","pageNumbers","currentPage","number","className","TodoListBlock","TodoListTemplate","children","TodoHeadBlock","TodoHead","sort","DisplaySortIcon","TodoListContainer","useSelector","useDispatch","useEffect","getRefText","refText","forEach","found","find","push","confirm","every","element","alert","useState","setCurrentPage","indexOfLastTodo","indexOfFirstTodo","setSort","todoList","filter","search","currentTodos","slice","i","Math","ceil","length","sortTodosASC","sortTodosDESC","e","parseInt","target","Background","ModalBlock","TodoModal","open","onClose","multiSelectStyle","searchBox","border","display","alignItems","color","fontFamily","padding","borderRadius","inputField","margin","chips","background","marginBottom","option","fontSize","Form","form","Input","input","Button","button","TodoForm","onCreate","value","setValue","selectedList","setSelectedList","onChangeSelect","onSubmit","preventDefault","Set","selectedItem","style","marginRight","flex","placeholder","autoFocus","onChange","required","options","displayValue","onSelect","onRemove","selectedValues","TodoModalContainer","refArray","refId","c","getRefArray","TodoTemplateBlock","TodoTemplate","TodoFormContainer","TodoSearchBlock","TodoSearch","TodoSearchContainer","changeSearch","FileButton","TodoFileButton","TodoFileButtonsBlock","TodoFileContainer","buildFileSelector","fileSelector","document","createElement","setAttribute","onchange","onChangeFile","accept","event","stopPropagation","file","files","reader","FileReader","onload","onReaderLoad","readAsText","loadTodos","JSON","parse","result","click","App","GlobalStyle","createGlobalStyle","Boolean","window","location","hostname","match","rootReducer","combineReducers","b","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","logger","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3b8b853b.chunk.js","sourcesContent":["const palette = {\n  lightgray: \"#e3e6ec\",\n  gray: \"#999\",\n  darkgray: \"#666\",\n  blue: \"#00d3f0\",\n  yellow: \"#f3bb00\"\n};\n\nexport default palette;\n","import axios from \"axios\";\n\nexport const getTodos = async () => {\n  const response = await axios.get(\"/api/todos\");\n  return response.data;\n};\n\nexport const postTodo = async (data) => {\n  const { text, ref } = data;\n  const response = await axios.post(\"/api/todos\", {\n    text,\n    ref,\n  });\n  return response.data;\n};\n\nexport const deleteTodo = async (id) => {\n  const response = await axios.delete(`/api/todos/${id}`);\n  return response.data;\n};\n\nexport const toggleTodo = async (id) => {\n  const response = await axios.put(`/api/todos/${id}/done`);\n  return response.data;\n};\n\nexport const putTodo = async (data) => {\n  const { id, text, ref } = data;\n  const response = await axios.put(`/api/todos/${id}`, {\n    text,\n    ref,\n  });\n  return response.data;\n};\n\nexport const fileUpload = async (todos) => {\n  const response = await axios.post(\"/fileUpload\", {\n    todos,\n  });\n\n  return response.data;\n};\n\nexport const fileDownload = async () => {\n  const response = await axios.get(`/fileDownload`);\n  return response.data;\n};\n","// Promise에 기반한 Thunk를 만들어주는 함수\nexport const createPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (param) => async (dispatch) => {\n    // 요청 시작\n    dispatch({ type, param });\n    try {\n      // 결과물의 이름은 payload로 통일\n      const payload = await promiseCreator(param);\n      // 성공\n      dispatch({ type: SUCCESS, payload });\n    } catch (e) {\n      // 실패\n      dispatch({ type: ERROR, payload: e, error: true });\n    }\n  };\n};\n\nexport const handleAsyncActions = (type, keepData = false) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          todos: {\n            loading: true,\n            data: keepData ? state.todos.data : null,\n            error: null,\n          },\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          todos: {\n            loading: false,\n            data: action.payload,\n            error: null,\n          },\n        };\n      case ERROR:\n        return {\n          ...state,\n          todos: {\n            loading: false,\n            data: null,\n            error: action.payload,\n          },\n        };\n      default:\n        return state;\n    }\n  };\n};\n","import * as todosAPI from \"../api/todos\";\nimport { handleAsyncActions, createPromiseThunk } from \"../lib/asyncUtils\";\n\n/* 액션 타입 선언 */\n\n// 전체 투두리스트 조회\nconst GET_TODOS = \"todos/GET_TODOS\"; // 요청 시작\nconst GET_TODOS_SUCCESS = \"todos/GET_TODOS_SUCCESS\"; // 요청 성공\nconst GET_TODOS_ERROR = \"todos/GET_TODOS_SUCCESS\"; // 요청 실패\n\n// 투두 생성\nconst POST_TODO = \"todos/POST_TODO\";\nconst POST_TODO_SUCCESS = \"todos/POST_TODO_SUCCESS\";\nconst POST_TODO_ERROR = \"todos/POST_TODO_SUCCESS\";\n\n// 투두 삭제\nconst DELETE_TODO = \"todos/DELETE_TODO\";\nconst DELETE_TODO_SUCCESS = \"todos/DELETE_TODO_SUCCESS\";\nconst DELETE_TODO_ERROR = \"todos/DELETE_TODO_ERROR\";\n\n// 투두 상태 전환\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst TOGGLE_TODO_SUCCESS = \"todos/TOGGLE_TODO_SUCCESS\";\nconst TOGGLE_TODO_ERROR = \"todos/TOGGLE_TODO_ERROR\";\n\n// 투두 모달 열기/닫기\nconst SHOW_MODAL = \"todos/SHOW_MODAL\";\nconst CLOSE_MODAL = \"todos/CLOSE_MODAL\";\n\n// 선택된 투두 설정\nconst SET_TODO = \"todos/SET_TODO\";\n\n// 투두 수정\nconst PUT_TODO = \"todos/PUT_TODO\";\nconst PUT_TODO_SUCCESS = \"todos/PUT_TODO_SUCCESS\";\nconst PUT_TODO_ERROR = \"todos/PUT_TODO_ERROR\";\n\n// 검색 키워드 변경\nconst CHANGE_SEARCH = \"todos/CHANGE_SEARCH\";\n\n// 투두 정렬(오름차순/내림차순)\nconst SORT_TODOS_ASC = \"todos/SORT_TODOS_ASC\";\nconst SORT_TODOS_DESC = \"todos/SORT_TODOS_DESC\";\n\n// 파일 업로드(복원)\nconst FILE_UPLOAD = \"todos/FILE_UPLOAD\";\nconst FILE_UPLOAD_SUCCESS = \"todos/FILE_UPLOAD_SUCCESS\";\nconst FILE_UPLOAD_ERROR = \"todos/FILE_UPLOAD_ERROR\";\n\n// 파일 다운로드(백업)\nconst FILE_DOWNLOAD = \"todos/FILE_DOWNLOAD\";\nconst FILE_DOWNLOAD_SUCCESS = \"todos/FILE_DOWNLOAD_SUCCESS\";\nconst FILE_DOWNLOAD_ERROR = \"todos/FILE_DOWNLOAD_ERROR\";\n\n/* 초기 상태 */\nconst initialState = {\n  todos: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n  todo: {},\n  keyword: \"\",\n  modalOpen: false,\n};\n\n/* 액션 생성함수 선언 */\nexport const showModal = () => ({ type: SHOW_MODAL });\nexport const closeModal = () => ({ type: CLOSE_MODAL });\nexport const setTodo = (data) => ({ type: SET_TODO, payload: data });\nexport const changeSearch = (keyword) => ({ type: CHANGE_SEARCH, payload: keyword });\nexport const sortTodosASC = (type) => ({ type: SORT_TODOS_ASC, payload: type });\nexport const sortTodosDESC = (type) => ({ type: SORT_TODOS_DESC, payload: type });\n\nexport const getTodos = createPromiseThunk(GET_TODOS, todosAPI.getTodos);\nexport const postTodo = createPromiseThunk(POST_TODO, todosAPI.postTodo);\nexport const deleteTodo = createPromiseThunk(DELETE_TODO, todosAPI.deleteTodo);\nexport const toggleTodo = createPromiseThunk(TOGGLE_TODO, todosAPI.toggleTodo);\nexport const putTodo = createPromiseThunk(PUT_TODO, todosAPI.putTodo);\nexport const fileUpload = createPromiseThunk(FILE_UPLOAD, todosAPI.fileUpload);\nexport const fileDownload = createPromiseThunk(FILE_DOWNLOAD, todosAPI.fileDownload);\n\n// 리듀서\nexport default function todo(state = initialState, action) {\n  switch (action.type) {\n    case GET_TODOS:\n    case GET_TODOS_SUCCESS:\n    case GET_TODOS_ERROR:\n      return handleAsyncActions(GET_TODOS, true)(state, action);\n    case POST_TODO:\n    case POST_TODO_SUCCESS:\n    case POST_TODO_ERROR:\n      return handleAsyncActions(POST_TODO, true)(state, action);\n    case DELETE_TODO:\n    case DELETE_TODO_SUCCESS:\n    case DELETE_TODO_ERROR:\n      return handleAsyncActions(DELETE_TODO, true)(state, action);\n    case TOGGLE_TODO:\n    case TOGGLE_TODO_SUCCESS:\n    case TOGGLE_TODO_ERROR:\n      return handleAsyncActions(TOGGLE_TODO, true)(state, action);\n    case PUT_TODO:\n    case PUT_TODO_SUCCESS:\n    case PUT_TODO_ERROR:\n      return handleAsyncActions(PUT_TODO, true)(state, action);\n    case SHOW_MODAL:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n    case SET_TODO:\n      return {\n        ...state,\n        todo: action.payload,\n      };\n    case CHANGE_SEARCH:\n      return {\n        ...state,\n        keyword: action.payload,\n      };\n    case SORT_TODOS_DESC:\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          data: state.todos.data.sort(function (a, b) {\n            if (b[action.payload] < a[action.payload]) {\n              return -1;\n            }\n            if (b[action.payload] > a[action.payload]) {\n              return 1;\n            }\n            // 이름이 같을 경우\n            return 0;\n          }),\n        },\n      };\n    case SORT_TODOS_ASC:\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          data: state.todos.data.sort(function (a, b) {\n            if (b[action.payload] > a[action.payload]) {\n              return -1;\n            }\n            if (b[action.payload] < a[action.payload]) {\n              return 1;\n            }\n            // 이름이 같을 경우\n            return 0;\n          }),\n        },\n      };\n    case FILE_UPLOAD:\n    case FILE_UPLOAD_SUCCESS:\n    case FILE_UPLOAD_ERROR:\n      return handleAsyncActions(FILE_UPLOAD, true)(state, action);\n    case FILE_DOWNLOAD:\n    case FILE_DOWNLOAD_SUCCESS:\n    case FILE_DOWNLOAD_ERROR:\n      if (action.payload === \"SUCCESS\") {\n        alert(\"저장이 완료 되었습니다.\");\n      } else {\n        alert(action.payload);\n      }\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete, MdCreate } from \"react-icons/md\";\nimport palette from \"../lib/palette\";\n\nfunction TodoItem({ todo, refs, onDelete, onToggle, onModalOpen }) {\n  const { id, text, done, createdDate, modifiedDate, ref } = todo;\n  return (\n    <TodoItemBlock>\n      <div>\n        <Checkbox done={done} onClick={() => onToggle(id, ref)}>\n          {done && <MdDone />}\n        </Checkbox>\n      </div>\n      <div>\n        <Text done={done}>{text}</Text>\n        <div>{refs && refs.map((ref) => <RefTodoItem key={ref.id}>@{ref.text}</RefTodoItem>)}</div>\n      </div>\n      <DateBlock>{createdDate}</DateBlock>\n      <DateBlock>{modifiedDate}</DateBlock>\n      <ActionBlock>\n        <MdCreate onClick={() => onModalOpen(id)} />\n        <MdDelete onClick={() => onDelete(id)} />\n      </ActionBlock>\n    </TodoItemBlock>\n  );\n}\n\nconst TodoItemBlock = styled.div`\n  display: table-row;\n  font-size: 0.875rem;\n  & > div {\n    display: table-cell;\n    vertical-align: middle;\n  }\n`;\n\nconst Checkbox = styled.div`\n  width: 20px;\n  height: 20px;\n  border: 1.2px solid ${palette.gray};\n  border-radius: 100%;\n  font-size: 1.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-right: 25px;\n  ${(props) =>\n    props.done &&\n    css`\n      background: ${palette.yellow};\n      color: white;\n      border: 1.2px solid ${palette.yellow};\n    `}\n`;\n\nconst Text = styled.div`\n  color: ${palette.darkgray};\n  font-weight: bold;\n  ${(props) =>\n    props.done &&\n    css`\n      opacity: 0.5;\n      text-decoration: line-through;\n    `}\n`;\n\nconst RefTodoItem = styled.span`\n  display: inline-block;\n  margin-right: 8px;\n  font-size: 0.75rem;\n`;\n\nconst DateBlock = styled.div`\n  font-size: 0.75rem;\n`;\n\nconst ActionBlock = styled.div`\n  cursor: pointer;\n  font-size: 1.25rem;\n  opacity: 1;\n  text-align: right;\n  svg {\n    margin-left: 0.5rem;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport default TodoItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../lib/palette\";\n\nfunction TodoPagination({ pageNumbers, onClick, currentPage }) {\n  return (\n    <PaginationBlock>\n      {pageNumbers.map((number) => (\n        <div\n          key={number}\n          id={number}\n          onClick={onClick}\n          className={currentPage === number ? \"currentPage\" : \"\"}\n        >\n          {number}\n        </div>\n      ))}\n    </PaginationBlock>\n  );\n}\n\nconst PaginationBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1rem 0;\n\n  & > div {\n    margin-right: 1rem;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n\n  .currentPage {\n    color: ${palette.yellow};\n  }\n`;\n\nexport default TodoPagination;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction TodoListTemplate({ children }) {\n  return (\n    <TodoListBlock>\n      <div>{children}</div>\n    </TodoListBlock>\n  );\n}\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  & > div {\n    display: table;\n    border-spacing: 0 15px;\n    width: 100%;\n  }\n`;\n\nexport default TodoListTemplate;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaSort, FaSortUp, FaSortDown } from \"react-icons/fa\";\n\nfunction TodoHead({ onClick, sort }) {\n  const { done, text, createdDate, modifiedDate } = sort;\n\n  // 상태에 따른 아이콘 표시\n  const DisplaySortIcon = ({ type }) => {\n    // 초기 상태\n    if (type === null) return <FaSort />;\n    // 내림차순\n    if (type) return <FaSortDown />;\n    // 오름차순\n    return <FaSortUp />;\n  };\n\n  return (\n    <TodoHeadBlock>\n      <div onClick={() => onClick(\"done\")}>\n        상태 <DisplaySortIcon type={done} />\n      </div>\n      <div onClick={() => onClick(\"text\")}>\n        내용 <DisplaySortIcon type={text} />\n      </div>\n      <div onClick={() => onClick(\"createdDate\")}>\n        작성일 <DisplaySortIcon type={createdDate} />\n      </div>\n      <div onClick={() => onClick(\"modifiedDate\")}>\n        수정일 <DisplaySortIcon type={modifiedDate} />\n      </div>\n      <div></div>\n    </TodoHeadBlock>\n  );\n}\n\nconst TodoHeadBlock = styled.div`\n  display: table-header-group;\n  font-size: 0.75rem;\n  & > div {\n    display: table-cell;\n    cursor: pointer;\n    &:nth-child(2) {\n      width: 60%;\n    }\n    &:last-of-type {\n      text-align: right;\n    }\n    &:hover {\n      opacity: 0.8;\n    }\n\n    svg {\n      vertical-align: middle;\n    }\n  }\n`;\n\nexport default TodoHead;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getTodos,\n  deleteTodo,\n  toggleTodo,\n  showModal,\n  setTodo,\n  sortTodosASC,\n  sortTodosDESC,\n} from \"../modules/todos\";\nimport TodoItem from \"../components/TodoItem\";\nimport TodoPagination from \"../components/TodoPagination\";\nimport TodoListTemplate from \"../components/TodoListTemplate\";\nimport TodoHead from \"../components/TodoHead\";\n\nfunction TodoListContainer() {\n  const { loading, data: todos, error } = useSelector((state) => state.todos.todos);\n  const keyword = useSelector((state) => state.todos.keyword);\n  const dispatch = useDispatch();\n\n  // 투두리스트 가져오기\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  // 참조하고 있는 투두의 내용 배열 반환\n  const getRefText = (refs) => {\n    const refText = [];\n    refs.forEach((ref) => {\n      const found = todos.find((todo) => todo.id === ref);\n      refText.push(found);\n    });\n    return refText;\n  };\n\n  // 투두 삭제\n  const onDelete = (id) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"삭제하시겠습니까?\")) {\n      dispatch(deleteTodo(id));\n    }\n  };\n\n  // 상태 전환 (완료 <-> 미완료)\n  const onToggle = (id, ref) => {\n    // 참조(ref)하고 있는 투두의 상태 먼저 확인\n    const refStatusCheck = (element) => {\n      const found = todos.find((todo) => todo.id === element);\n      return found.done;\n    };\n    // 참조하고 있는 투두가 모두 완료 상태일 때, 삭제 진행\n    ref.every(refStatusCheck) ? dispatch(toggleTodo(id)) : alert(\"먼저 할 일을 완료해주세요!\");\n  };\n\n  // 수정 팝업 오픈\n  const onModalOpen = (id) => {\n    // 수정하고자 하는 투두의 정보\n    const todo = todos.find((todo) => todo.id === id);\n    dispatch(setTodo(todo));\n    dispatch(showModal());\n  };\n\n  // 페이지네이션\n  const [currentPage, setCurrentPage] = useState(1);\n  const todosPerPage = 5; // 페이지당 보여줄 todo 갯수\n  const indexOfLastTodo = currentPage * todosPerPage; // 현재 페이지의 마지막 인덱스\n  const indexOfFirstTodo = indexOfLastTodo - todosPerPage; // 현재 페이지의 첫번째 인덱스\n  const pageNumbers = [];\n  const onClickPage = (e) => {\n    setCurrentPage(parseInt(e.target.id));\n  };\n\n  // 정렬\n  // 정렬 기준들의 상태\n  // null: 초기 상태, true: 오름차순, false: 내림차순\n  const [sort, setSort] = useState({\n    done: null,\n    text: null,\n    createdDate: null,\n    modifiedDate: null,\n  });\n  const onClickSort = (type) => {\n    // 클릭한 기준을 제외하고 초기상태로 변환 후 정렬 진행\n    setSort({\n      done: null,\n      text: null,\n      createdDate: null,\n      modifiedDate: null,\n      [type]: sort[type] === null ? true : !sort[type],\n    });\n    sort[type] ? dispatch(sortTodosASC(type)) : dispatch(sortTodosDESC(type));\n  };\n\n  if (loading && !todos) return <div>로딩중</div>;\n  if (error) return <div>에러가 발생했습니다.</div>;\n  if (!todos) return <div>할 일이 없습니다.</div>;\n\n  // 검색 keyword에 맞는 투두리스트\n  // 상태(완료/미완료로 검색), 내용, 작성일, 수정일\n  const todoList = todos.filter(\n    (todo) =>\n      todo.text.search(keyword) >= 0 ||\n      todo.createdDate.search(keyword) >= 0 ||\n      todo.modifiedDate.search(keyword) >= 0 ||\n      (keyword === \"미완료\" && !todo.done) ||\n      (keyword === \"완료\" && todo.done)\n  );\n  // 현재 페이지 인덱스에 맞는 투두리스트\n  const currentTodos = todoList.slice(indexOfFirstTodo, indexOfLastTodo);\n  // 페이지 수\n  for (let i = 1; i <= Math.ceil(todoList.length / todosPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <>\n      <TodoListTemplate>\n        <TodoHead onClick={onClickSort} sort={sort} />\n        {currentTodos.map((todo) => (\n          <TodoItem\n            todo={todo}\n            refs={getRefText(todo.ref)}\n            key={todo.id}\n            onDelete={onDelete}\n            onToggle={onToggle}\n            onModalOpen={onModalOpen}\n          />\n        ))}\n      </TodoListTemplate>\n      <TodoPagination pageNumbers={pageNumbers} onClick={onClickPage} currentPage={currentPage} />\n    </>\n  );\n}\n\nexport default TodoListContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdClose } from \"react-icons/md\";\n\nfunction TodoModal({ open, onClose, children }) {\n  return (\n    <>\n      {open && (\n        <Background>\n          <ModalBlock>\n            <MdClose onClick={onClose} />\n            {children}\n          </ModalBlock>\n        </Background>\n      )}\n    </>\n  );\n}\n\nconst Background = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalBlock = styled.div`\n  width: 500px;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n\n  /* Close Svg */\n  & > svg {\n    align-self: flex-end;\n    margin-bottom: 1rem;\n    font-size: 1.5rem;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport default TodoModal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport palette from \"../lib/palette\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\n\n// props 에 todo가 있는 경우 수정 모달의 폼\nfunction TodoForm({ todos, todo, refs, onCreate }) {\n  const [value, setValue] = useState(todo ? todo.text : \"\");\n  const [selectedList, setSelectedList] = useState(todo ? refs : []);\n  // submit\n  const onSubmit = (e) => {\n    // 새로고침 방지\n    e.preventDefault();\n    onCreate({\n      id: todo && todo.id,\n      text: value,\n      ref: [...new Set(selectedList.map((selectedItem) => selectedItem.id))],\n    });\n    setValue(\"\");\n    setSelectedList([]);\n  };\n  // 먼저 할 일 (Select) 추가 및 제거\n  const onChangeSelect = (selectedList) => {\n    setSelectedList(selectedList);\n  };\n  // 할 일 내용 (input) 변경\n  const onChangeInput = (e) => {\n    setValue(e.target.value);\n  };\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <div style={{ marginRight: `15px`, flex: 1 }}>\n          <Input\n            placeholder=\"할 일을 입력하세요\"\n            autoFocus\n            value={value}\n            onChange={onChangeInput}\n            required\n          ></Input>\n          <Multiselect\n            options={todos ? todos : []}\n            displayValue=\"text\"\n            onSelect={onChangeSelect}\n            onRemove={onChangeSelect}\n            selectedValues={selectedList}\n            placeholder=\"먼저 할 일\"\n            style={multiSelectStyle}\n          />\n        </div>\n        <Button type=\"submit\">\n          <MdAdd />\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nconst multiSelectStyle = {\n  searchBox: {\n    border: `1px solid ${palette.lightgray}`,\n    display: \"flex\",\n    alignItems: \"center\",\n    color: palette.gray,\n    fontFamily: \"inherit\",\n    padding: \"10px 15px\",\n    borderRadius: \"10px\",\n  },\n  inputField: {\n    margin: \"0\",\n  },\n  chips: {\n    background: palette.blue,\n    marginBottom: 0,\n  },\n  option: {\n    fontSize: \"0.875rem\",\n  },\n};\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  padding-top: 15px;\n  border-top: 1px solid ${palette.lightgray};\n`;\n\nconst Input = styled.input`\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  padding: 12px;\n  box-sizing: border-box;\n  width: 100%;\n  font-size: 0.875rem;\n  color: ${palette.darkgray};\n  font-family: inherit;\n  &::placeholder {\n    color: ${palette.gray};\n  }\n`;\n\nconst Button = styled.button`\n  background: ${palette.blue};\n  color: white;\n  outline: none;\n  border: none;\n  width: 40px;\n  height: 40px;\n  border-radius: 100%;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 2.5rem;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport default TodoForm;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { closeModal } from \"../modules/todos\";\nimport TodoModal from \"../components/TodoModal\";\nimport TodoForm from \"../components/TodoForm\";\nimport { putTodo } from \"../modules/todos\";\n\nfunction TodoModalContainer() {\n  const modalOpen = useSelector((state) => state.todos.modalOpen);\n  const todo = useSelector((state) => state.todos.todo);\n  const todos = useSelector((state) => state.todos.todos.data);\n  const dispatch = useDispatch();\n  // Modal 닫기\n  const onClose = () => {\n    dispatch(closeModal());\n  };\n\n  // 참조하고 있는 투두의 내용 배열 반환(먼저 할 일)\n  const getRefArray = () => {\n    const refArray = [];\n    todo.ref.forEach((refId) => {\n      refArray.push(todos.find((c) => c.id === refId));\n    });\n    return refArray;\n  };\n\n  // 투두 수정\n  const onCreate = (data) => {\n    dispatch(putTodo(data));\n    onClose();\n  };\n\n  return (\n    <TodoModal onClose={onClose} open={modalOpen}>\n      <TodoForm\n        todo={todo}\n        // todos에서 자기 자신 제외 (먼저 할 일 Select에 포함 X)\n        todos={todos && todos.filter((element) => element.id !== todo.id)}\n        refs={() => getRefArray()}\n        onCreate={onCreate}\n      />\n    </TodoModal>\n  );\n}\n\nexport default TodoModalContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nconst TodoTemplateBlock = styled.div`\n  width: 700px;\n  height: 500px;\n  background: white;\n  border-radius: 10px;\n  padding: 15px;\n  margin: 0 auto;\n  position: relative;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default TodoTemplate;\n","import React from \"react\";\nimport TodoForm from \"../components/TodoForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { postTodo } from \"../modules/todos\";\n\nfunction TodoFormContainer() {\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos.todos.data);\n\n  // 생성\n  const onCreate = data => {\n    dispatch(postTodo(data));\n  };\n\n  return <TodoForm todos={todos} onCreate={onCreate} />;\n}\n\nexport default TodoFormContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../lib/palette\";\n\nfunction TodoSearch({ value, onChange }) {\n  return <TodoSearchBlock placeholder=\"검색\" value={value} onChange={onChange}></TodoSearchBlock>;\n}\n\nconst TodoSearchBlock = styled.input`\n  width: 700px;\n  height: 50px;\n  background: white;\n  margin: 15px auto;\n  border-radius: 10px;\n  outline: none;\n  border: none;\n  padding: 15px;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  font-family: inherit;\n  color: ${palette.darkgray};\n  &::placeholder {\n    color: ${palette.gray};\n  }\n`;\n\nexport default TodoSearch;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TodoSearch from \"../components/TodoSearch\";\nimport { changeSearch } from \"../modules/todos\";\n\nfunction TodoSearchContainer() {\n  const keyword = useSelector(state => state.todos.keyword);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(changeSearch(e.target.value));\n  };\n  return <TodoSearch value={keyword} onChange={onChange} />;\n}\n\nexport default TodoSearchContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../lib/palette\";\n\nfunction TodoFileButton({ onClick, text }) {\n  return <FileButton onClick={onClick}>{text}</FileButton>;\n}\n\nconst FileButton = styled.button`\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  color: white;\n  width: 3rem;\n  height: 2rem;\n  font-size: 1rem;\n  line-height: 1rem;\n  background: ${palette.yellow};\n  cursor: pointer;\n  margin-left: 0.5rem;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport default TodoFileButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoFileButton from \"../components/TodoFileButton\";\nimport { useDispatch } from \"react-redux\";\nimport { fileDownload, fileUpload } from \"../modules/todos\";\n\nfunction TodoFileContainer() {\n  const dispatch = useDispatch();\n\n  // 파일 다운로드(백업)\n  const onFileDownload = () => dispatch(fileDownload());\n\n  // 파일 업로드(복원)\n  const onFileUpload = () => {\n    const fileSelector = buildFileSelector();\n    fileSelector.click();\n  };\n  // input[type='file'] 생성\n  const buildFileSelector = () => {\n    const fileSelector = document.createElement(\"input\");\n    fileSelector.setAttribute(\"type\", \"file\");\n    fileSelector.onchange = onChangeFile;\n    // json 파일만 허용\n    fileSelector.accept = \"application/JSON\";\n    return fileSelector;\n  };\n  // file 변경\n  const onChangeFile = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(file);\n  };\n  // json 파일 읽기\n  const onReaderLoad = (event) => {\n    const loadTodos = JSON.parse(event.target.result);\n    dispatch(fileUpload(loadTodos));\n  };\n\n  return (\n    <TodoFileButtonsBlock>\n      <TodoFileButton text=\"백업\" onClick={onFileDownload} />\n      <TodoFileButton text=\"복원\" onClick={onFileUpload} />\n    </TodoFileButtonsBlock>\n  );\n}\n\nconst TodoFileButtonsBlock = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport default TodoFileContainer;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport palette from \"./lib/palette\";\nimport TodoListContainer from \"./containers/TodoListContainer\";\nimport TodoModalContainer from \"./containers/TodoModalContainer\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoFormContainer from \"./containers/TodoFormContainer\";\nimport TodoSearchContainer from \"./containers/TodoSearchContainer\";\nimport TodoFileContainer from \"./containers/TodoFileContainer\";\n\nfunction App() {\n  const GlobalStyle = createGlobalStyle`\n    body{\n      width: 100%;\n      min-height : 100vh;\n      overflow-y : auto;\n      background : ${palette.lightgray};\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: ${palette.gray};\n    }\n`;\n\n  return (\n    <>\n      <GlobalStyle />\n      <TodoFileContainer />\n      <TodoSearchContainer />\n      <TodoTemplate>\n        <TodoListContainer />\n        <TodoFormContainer />\n      </TodoTemplate>\n      <TodoModalContainer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\n\nconst rootReducer = combineReducers({ todos });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./modules\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(ReduxThunk, logger)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}